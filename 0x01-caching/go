#!/usr/bin/python3
"""
FIFO Cache module
"""
from base_caching import BaseCaching

class FIFOCache(BaseCaching):
    """FIFO Cache class
    """

    def __init__(self):
        """Initialize
        """
        super().__init__()
        self.order_of_access = []

    def put(self, key, item):
        """Add an item in the cache with FIFO algorithm
        """
        if key is None or item is None:
            return

        if len(self.cache_data) >= self.MAX_ITEMS:
            # If cache is full, remove the first item that was put in the cache (FIFO)
            oldest_key = self.order_of_access.pop(0)
            del self.cache_data[oldest_key]
            print("DISCARD:", oldest_key)

        # Add the new key to the order_of_access list
        self.order_of_access.append(key)
        # Update the cache with the new item
        self.cache_data[key] = item

    def get(self, key):
        """Get an item from the cache with FIFO algorithm
        """
        if key is None or key not in self.cache_data:
            return None

        return self.cache_data[key]

